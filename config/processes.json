{
    "23": {
        "pid": 23,
        "name": "auto_process",
        "start_time": 1744374438.6422882,
        "status": "finished",
        "details": {
            "module": "src.auto_process",
            "started_by": "web",
            "progress": 100,
            "progress_message": "auto_process completed successfully",
            "elapsed_time": 50.80166292190552,
            "stdout": "INFO - Starting automatic photo processing\nINFO - Running metadata_schema.py...\nINFO - metadata_schema.py output: INFO - Authenticating to SharePoint site: https://erni.sharepoint.com/sites/100_Testing_KI-Projekte\nINFO - metadata_schema.py output: INFO - Retrieving library: Fertige Referenzfotos\nINFO - metadata_schema.py output: INFO - Found library: Fertige Referenzfotos\nINFO - metadata_schema.py output: INFO - Retrieving field schema for library: Fertige Referenzfotos\nINFO - metadata_schema.py output: \nINFO - metadata_schema.py output: Found 23 metadata fields in target library:\nINFO - metadata_schema.py output: - Titel (Title): Text [Optional]\nINFO - metadata_schema.py output: - Kunde (Kunde): Text [Optional]\nINFO - metadata_schema.py output: - Ort (OrtohnePLZ): Text [Optional]\nINFO - metadata_schema.py output: - Projektkategorie (Projektkategorie): Choice [Optional]\nINFO - metadata_schema.py output:   Choices: Landwirtschaft, Wohnbaute, Industrie / Gewerbe, Umbau / Sanierung, Aufstockung / Erweiterung\nINFO - metadata_schema.py output: - Material (Material): MultiChoice [Optional]\nINFO - metadata_schema.py output:   Choices: Holz, Metall, Blech, Putz, Faserzement, Kupfer, Alu, Glas, 3-Schicht, Sandwich, Ziegel, Eternit, Kunststoff, Altholz, BSH, Kerto, Prefa, Bitumen, Teppich\nINFO - metadata_schema.py output: - Holzart (Holzart): MultiChoice [Optional]\nINFO - metadata_schema.py output:   Choices: Eiche, Esche, Fichte, Weisstanne, Tanne, Buche, L\u00e4rche, Div Massivh\u00f6lzer\nINFO - metadata_schema.py output: - Beschreibung (Beschreibung): Note [Optional]\nINFO - metadata_schema.py output: - Treppe (Treppe): Choice [Optional]\nINFO - metadata_schema.py output:   Choices: Eingestemmt, Aufgesattelt, Treppengel\u00e4nder, Faltwerk, Landwirtschaftstreppe\nINFO - metadata_schema.py output: - Ansicht (Ansicht): Choice [Optional]\nINFO - metadata_schema.py output:   Choices: Innenaufnahme, Aussenaufnahme\nINFO - metadata_schema.py output: - Sparte / Kategorie (Sparte_x002f_Kategorie): MultiChoice [Optional]\nINFO - metadata_schema.py output:   Choices: Spengler Steildach, Spengler Flachdach, Ausbauarbeit, Dacheindeckung, Holzbau, Andere Gewerke, Agrar\nINFO - metadata_schema.py output: - B\u00f6den & Decken (B_x00f6_denDecken): MultiChoice [Optional]\nINFO - metadata_schema.py output:   Choices: Fl\u00e4chige 3SP, Massivholzboden, Konventionell, Andere (Handelsprodukte)\nINFO - metadata_schema.py output: - Fassade (Fassade): MultiChoice [Optional]\nINFO - metadata_schema.py output:   Choices: Holzfassade horizontal, Holzfassade vertikal, Falzbahn, Verputzt, Grossformatplatten, Schieferfassaden, Sandwich\nINFO - metadata_schema.py output: - Bauteil (Bauteil): MultiChoice [Optional]\nINFO - metadata_schema.py output:   Choices: Decke, M\u00f6bel, Fenster, Dachfenster, Fensterabschl\u00fcsse (Bank, Leibung, Sims), Bodenbelag, T\u00fcren, Treppe, Fassade, Schneefang, Photovoltaikanlage Inndach, Photovoltaikanlage Aufdach\nINFO - metadata_schema.py output: - Ausf\u00fchrung (Ausf_x00fc_hrung): MultiChoice [Optional]\nINFO - metadata_schema.py output:   Choices: Akustik, Blockfutter, Blendrahmen, Futtert\u00fcre, HST, Gardarobe, Schrank, Sitzfenster\nINFO - metadata_schema.py output: - Farbbehandlung (Farbbehandlung): MultiChoice [Optional]\nINFO - metadata_schema.py output:   Choices: Lasur (Aussen), deckend, ge\u00f6lt, druckimpr\u00e4gniert, unbehandelt, weiss lasiert (Innen), farblos lasiert (Innen)\nINFO - metadata_schema.py output: - Gel\u00e4nder (Gel_x00e4_nder): Choice [Optional]\nINFO - metadata_schema.py output:   Choices: Holzgel\u00e4nder, Glasgel\u00e4nder, Staketengel\u00e4nder, Plattengel\u00e4nder\nINFO - metadata_schema.py output: - Raum (Raum): Choice [Optional]\nINFO - metadata_schema.py output:   Choices: K\u00fcche, WC / Bad, Zimmer, Essen / Wohnen, Treppenhaus\nINFO - metadata_schema.py output: - Marketing (Marketing): Choice [Optional]\nINFO - metadata_schema.py output:   Choices: Montage, Mitarbeiter am Arbeiten, Betrieb, Infrastruktur & Logistik, Referenzbild\nINFO - metadata_schema.py output: - G\u00fcllelager (G_x00fc_llelager): MultiChoice [Optional]\nINFO - metadata_schema.py output:   Choices: Tragblech, Sandwich, Spezialprojekte, Email\nINFO - metadata_schema.py output: - Status (Status): Choice [Required]\nINFO - metadata_schema.py output:   Choices: Entwurf KI, Bearbeitet Marketing, Bearbeitet Verkauf, Fertig\nINFO - metadata_schema.py output: - KI tags (KItags): Note [Optional]\nINFO - metadata_schema.py output: - Extracted Text (MediaServiceOCR): Note [Optional]\nINFO - metadata_schema.py output: - OriginalName (OriginalName): Text [Optional]\nINFO - metadata_schema.py output: INFO - Schema saved to /app/config/sharepoint_choices.json\nINFO - metadata_schema.py output: \nINFO - metadata_schema.py output: Metadata schema saved to /app/config/sharepoint_choices.json\nINFO - Successfully completed metadata_schema.py in 3.60 seconds\nINFO - Running photo_metadata.py...\nINFO - photo_metadata.py output: INFO - Authenticating to SharePoint site: https://erni.sharepoint.com/sites/100_Testing_KI-Projekte\nINFO - photo_metadata.py output: INFO - Retrieving library: PhotoLibrary\nINFO - photo_metadata.py output: INFO - Found library: PhotoLibrary\nINFO - photo_metadata.py output: INFO - Retrieving files from library: PhotoLibrary\nINFO - photo_metadata.py output: INFO - Found 5 photo files in library\nINFO - photo_metadata.py output: \nINFO - photo_metadata.py output: Found 5 photos in source library\nINFO - photo_metadata.py output: Downloading and extracting metadata...\nINFO - photo_metadata.py output: INFO - File registry initialized with 0 processed and 0 uploaded files\nINFO - photo_metadata.py output: INFO - Processing batch 1 (5 photos)\nINFO - photo_metadata.py output: INFO - Downloading file: download.jpg\nINFO - photo_metadata.py output: INFO - File downloaded to: /app/data/downloads/download.jpg\nINFO - photo_metadata.py output: INFO - Metadata saved to: /app/data/metadata/download.yml\nINFO - photo_metadata.py output: INFO - Deleting file from SharePoint: download.jpg\nINFO - photo_metadata.py output: INFO - Successfully deleted file from SharePoint: download.jpg\nINFO - photo_metadata.py output: INFO - Successfully processed photo: download.jpg\nINFO - photo_metadata.py output: INFO - Downloading file: IMG_0489.JPG\nINFO - photo_metadata.py output: INFO - File downloaded to: /app/data/downloads/IMG_0489.JPG\nINFO - photo_metadata.py output: INFO - Metadata saved to: /app/data/metadata/IMG_0489.yml\nINFO - photo_metadata.py output: INFO - Deleting file from SharePoint: IMG_0489.JPG\nINFO - photo_metadata.py output: INFO - Successfully deleted file from SharePoint: IMG_0489.JPG\nINFO - photo_metadata.py output: INFO - Successfully processed photo: IMG_0489.JPG\nINFO - photo_metadata.py output: INFO - Downloading file: Breitenstein_Bettwil-30.jpg\nINFO - photo_metadata.py output: INFO - File downloaded to: /app/data/downloads/Breitenstein_Bettwil-30.jpg\nINFO - photo_metadata.py output: INFO - Metadata saved to: /app/data/metadata/Breitenstein_Bettwil-30.yml\nINFO - photo_metadata.py output: INFO - Deleting file from SharePoint: Breitenstein_Bettwil-30.jpg\nINFO - photo_metadata.py output: INFO - Successfully deleted file from SharePoint: Breitenstein_Bettwil-30.jpg\nINFO - photo_metadata.py output: INFO - Successfully processed photo: Breitenstein_Bettwil-30.jpg\nINFO - photo_metadata.py output: INFO - Downloading file: _DSC6713.jpg\nINFO - photo_metadata.py output: INFO - File downloaded to: /app/data/downloads/_DSC6713.jpg\nINFO - photo_metadata.py output: INFO - Metadata saved to: /app/data/metadata/_DSC6713.yml\nINFO - photo_metadata.py output: INFO - Deleting file from SharePoint: _DSC6713.jpg\nINFO - photo_metadata.py output: INFO - Successfully deleted file from SharePoint: _DSC6713.jpg\nINFO - photo_metadata.py output: INFO - Successfully processed photo: _DSC6713.jpg\nINFO - photo_metadata.py output: INFO - Downloading file: 20230823_153639.jpeg\nINFO - photo_metadata.py output: INFO - File downloaded to: /app/data/downloads/20230823_153639.jpeg\nINFO - photo_metadata.py output: INFO - Metadata saved to: /app/data/metadata/20230823_153639.yml\nINFO - photo_metadata.py output: INFO - Deleting file from SharePoint: 20230823_153639.jpeg\nINFO - photo_metadata.py output: INFO - Successfully deleted file from SharePoint: 20230823_153639.jpeg\nINFO - photo_metadata.py output: INFO - Successfully processed photo: 20230823_153639.jpeg\nINFO - photo_metadata.py output: INFO - Processed 5 photos, skipped 0 already processed photos\nINFO - photo_metadata.py output: INFO - Deleted 5 files from SharePoint\nINFO - photo_metadata.py output: INFO - Successfully processed 5 photos\nINFO - photo_metadata.py output: \nINFO - photo_metadata.py output: Successfully processed 5 photos\nINFO - photo_metadata.py output: INFO - Photos downloaded to: /app/data/downloads\nINFO - photo_metadata.py output: Photos downloaded to: /app/data/downloads\nINFO - photo_metadata.py output: INFO - Metadata saved to: /app/data/metadata\nINFO - photo_metadata.py output: Metadata saved to: /app/data/metadata\nINFO - photo_metadata.py output: INFO - Files were deleted from source SharePoint library after processing\nINFO - photo_metadata.py output: Files were deleted from source SharePoint library after processing\nINFO - Successfully completed photo_metadata.py in 10.74 seconds\nINFO - Running openai_analyzer.py...\nINFO - openai_analyzer.py output: INFO - Loaded metadata schema from config/sharepoint_choices.json\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Prepared OpenAI prompt:\nINFO - openai_analyzer.py output: ------------------------\nINFO - openai_analyzer.py output: Agieren Sie als erfahrener Experte in der Herstellung und dem Bau von Holzh\u00e4usern und -konstruktionen f\u00fcr die Firma ERNI. ERNI ist ein f\u00fchrendes Unternehmen im Bereich Holzbau, das sich auf hochwertige Holzkonstruktionen, Fassaden, Innenausbau und landwirtschaftliche Bauten spezialisiert hat.\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: \"Analysieren Sie das Bild detailliert und identifizieren Sie alle relevanten Merkmale f\u00fcr ein Holzbauprojekt. Achten Sie besonders auf:\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: SCHEMA DEFINITION (FOLLOW EXACTLY):\nINFO - openai_analyzer.py output: Field: Titel\nINFO - openai_analyzer.py output:   Internal Name: Title\nINFO - openai_analyzer.py output:   Type: Text\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: Kunde\nINFO - openai_analyzer.py output:   Internal Name: Kunde\nINFO - openai_analyzer.py output:   Type: Text\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: Ort\nINFO - openai_analyzer.py output:   Internal Name: OrtohnePLZ\nINFO - openai_analyzer.py output:   Type: Text\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: Projektkategorie\nINFO - openai_analyzer.py output:   Internal Name: Projektkategorie\nINFO - openai_analyzer.py output:   Type: Choice\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output:   Valid choices (use EXACTLY these values):\nINFO - openai_analyzer.py output:     - \"Landwirtschaft\"\nINFO - openai_analyzer.py output:     - \"Wohnbaute\"\nINFO - openai_analyzer.py output:     - \"Industrie / Gewerbe\"\nINFO - openai_analyzer.py output:     - \"Umbau / Sanierung\"\nINFO - openai_analyzer.py output:     - \"Aufstockung / Erweiterung\"\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: Material\nINFO - openai_analyzer.py output:   Internal Name: Material\nINFO - openai_analyzer.py output:   Type: MultiChoice\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output:   Valid choices (use EXACTLY these values):\nINFO - openai_analyzer.py output:     - \"Holz\"\nINFO - openai_analyzer.py output:     - \"Metall\"\nINFO - openai_analyzer.py output:     - \"Blech\"\nINFO - openai_analyzer.py output:     - \"Putz\"\nINFO - openai_analyzer.py output:     - \"Faserzement\"\nINFO - openai_analyzer.py output:     - \"Kupfer\"\nINFO - openai_analyzer.py output:     - \"Alu\"\nINFO - openai_analyzer.py output:     - \"Glas\"\nINFO - openai_analyzer.py output:     - \"3-Schicht\"\nINFO - openai_analyzer.py output:     - \"Sandwich\"\nINFO - openai_analyzer.py output:     - \"Ziegel\"\nINFO - openai_analyzer.py output:     - \"Eternit\"\nINFO - openai_analyzer.py output:     - \"Kunststoff\"\nINFO - openai_analyzer.py output:     - \"Altholz\"\nINFO - openai_analyzer.py output:     - \"BSH\"\nINFO - openai_analyzer.py output:     - \"Kerto\"\nINFO - openai_analyzer.py output:     - \"Prefa\"\nINFO - openai_analyzer.py output:     - \"Bitumen\"\nINFO - openai_analyzer.py output:     - \"Teppich\"\nINFO - openai_analyzer.py output:   Description: \u0417\u0434\u0435\u0441\u044c \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0443\u043a\u0430\u0437\u0430\u043d\u044b \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430, \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0435 \u043d\u0430 \u0444\u043e\u0442\u043e \nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: Holzart\nINFO - openai_analyzer.py output:   Internal Name: Holzart\nINFO - openai_analyzer.py output:   Type: MultiChoice\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output:   Valid choices (use EXACTLY these values):\nINFO - openai_analyzer.py output:     - \"Eiche\"\nINFO - openai_analyzer.py output:     - \"Esche\"\nINFO - openai_analyzer.py output:     - \"Fichte\"\nINFO - openai_analyzer.py output:     - \"Weisstanne\"\nINFO - openai_analyzer.py output:     - \"Tanne\"\nINFO - openai_analyzer.py output:     - \"Buche\"\nINFO - openai_analyzer.py output:     - \"L\u00e4rche\"\nINFO - openai_analyzer.py output:     - \"Div Massivh\u00f6lzer\"\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: Beschreibung\nINFO - openai_analyzer.py output:   Internal Name: Beschreibung\nINFO - openai_analyzer.py output:   Type: Note\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output:   Description: \u0417\u0434\u0435\u0441\u044c \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c 3-4 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0449\u0438\u0445, \u0447\u0442\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043e \u043d\u0430 \u0444\u043e\u0442\u043e\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: Treppe\nINFO - openai_analyzer.py output:   Internal Name: Treppe\nINFO - openai_analyzer.py output:   Type: Choice\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output:   Valid choices (use EXACTLY these values):\nINFO - openai_analyzer.py output:     - \"Eingestemmt\"\nINFO - openai_analyzer.py output:     - \"Aufgesattelt\"\nINFO - openai_analyzer.py output:     - \"Treppengel\u00e4nder\"\nINFO - openai_analyzer.py output:     - \"Faltwerk\"\nINFO - openai_analyzer.py output:     - \"Landwirtschaftstreppe\"\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: Ansicht\nINFO - openai_analyzer.py output:   Internal Name: Ansicht\nINFO - openai_analyzer.py output:   Type: Choice\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output:   Valid choices (use EXACTLY these values):\nINFO - openai_analyzer.py output:     - \"Innenaufnahme\"\nINFO - openai_analyzer.py output:     - \"Aussenaufnahme\"\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: Sparte / Kategorie\nINFO - openai_analyzer.py output:   Internal Name: Sparte_x002f_Kategorie\nINFO - openai_analyzer.py output:   Type: MultiChoice\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output:   Valid choices (use EXACTLY these values):\nINFO - openai_analyzer.py output:     - \"Spengler Steildach\"\nINFO - openai_analyzer.py output:     - \"Spengler Flachdach\"\nINFO - openai_analyzer.py output:     - \"Ausbauarbeit\"\nINFO - openai_analyzer.py output:     - \"Dacheindeckung\"\nINFO - openai_analyzer.py output:     - \"Holzbau\"\nINFO - openai_analyzer.py output:     - \"Andere Gewerke\"\nINFO - openai_analyzer.py output:     - \"Agrar\"\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: B\u00f6den & Decken\nINFO - openai_analyzer.py output:   Internal Name: B_x00f6_denDecken\nINFO - openai_analyzer.py output:   Type: MultiChoice\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output:   Valid choices (use EXACTLY these values):\nINFO - openai_analyzer.py output:     - \"Fl\u00e4chige 3SP\"\nINFO - openai_analyzer.py output:     - \"Massivholzboden\"\nINFO - openai_analyzer.py output:     - \"Konventionell\"\nINFO - openai_analyzer.py output:     - \"Andere (Handelsprodukte)\"\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: Fassade\nINFO - openai_analyzer.py output:   Internal Name: Fassade\nINFO - openai_analyzer.py output:   Type: MultiChoice\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output:   Valid choices (use EXACTLY these values):\nINFO - openai_analyzer.py output:     - \"Holzfassade horizontal\"\nINFO - openai_analyzer.py output:     - \"Holzfassade vertikal\"\nINFO - openai_analyzer.py output:     - \"Falzbahn\"\nINFO - openai_analyzer.py output:     - \"Verputzt\"\nINFO - openai_analyzer.py output:     - \"Grossformatplatten\"\nINFO - openai_analyzer.py output:     - \"Schieferfassaden\"\nINFO - openai_analyzer.py output:     - \"Sandwich\"\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: Bauteil\nINFO - openai_analyzer.py output:   Internal Name: Bauteil\nINFO - openai_analyzer.py output:   Type: MultiChoice\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output:   Valid choices (use EXACTLY these values):\nINFO - openai_analyzer.py output:     - \"Decke\"\nINFO - openai_analyzer.py output:     - \"M\u00f6bel\"\nINFO - openai_analyzer.py output:     - \"Fenster\"\nINFO - openai_analyzer.py output:     - \"Dachfenster\"\nINFO - openai_analyzer.py output:     - \"Fensterabschl\u00fcsse (Bank, Leibung, Sims)\"\nINFO - openai_analyzer.py output:     - \"Bodenbelag\"\nINFO - openai_analyzer.py output:     - \"T\u00fcren\"\nINFO - openai_analyzer.py output:     - \"Treppe\"\nINFO - openai_analyzer.py output:     - \"Fassade\"\nINFO - openai_analyzer.py output:     - \"Schneefang\"\nINFO - openai_analyzer.py output:     - \"Photovoltaikanlage Inndach\"\nINFO - openai_analyzer.py output:     - \"Photovoltaikanlage Aufdach\"\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: Ausf\u00fchrung\nINFO - openai_analyzer.py output:   Internal Name: Ausf_x00fc_hrung\nINFO - openai_analyzer.py output:   Type: MultiChoice\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output:   Valid choices (use EXACTLY these values):\nINFO - openai_analyzer.py output:     - \"Akustik\"\nINFO - openai_analyzer.py output:     - \"Blockfutter\"\nINFO - openai_analyzer.py output:     - \"Blendrahmen\"\nINFO - openai_analyzer.py output:     - \"Futtert\u00fcre\"\nINFO - openai_analyzer.py output:     - \"HST\"\nINFO - openai_analyzer.py output:     - \"Gardarobe\"\nINFO - openai_analyzer.py output:     - \"Schrank\"\nINFO - openai_analyzer.py output:     - \"Sitzfenster\"\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: Farbbehandlung\nINFO - openai_analyzer.py output:   Internal Name: Farbbehandlung\nINFO - openai_analyzer.py output:   Type: MultiChoice\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output:   Valid choices (use EXACTLY these values):\nINFO - openai_analyzer.py output:     - \"Lasur (Aussen)\"\nINFO - openai_analyzer.py output:     - \"deckend\"\nINFO - openai_analyzer.py output:     - \"ge\u00f6lt\"\nINFO - openai_analyzer.py output:     - \"druckimpr\u00e4gniert\"\nINFO - openai_analyzer.py output:     - \"unbehandelt\"\nINFO - openai_analyzer.py output:     - \"weiss lasiert (Innen)\"\nINFO - openai_analyzer.py output:     - \"farblos lasiert (Innen)\"\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: Gel\u00e4nder\nINFO - openai_analyzer.py output:   Internal Name: Gel_x00e4_nder\nINFO - openai_analyzer.py output:   Type: Choice\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output:   Valid choices (use EXACTLY these values):\nINFO - openai_analyzer.py output:     - \"Holzgel\u00e4nder\"\nINFO - openai_analyzer.py output:     - \"Glasgel\u00e4nder\"\nINFO - openai_analyzer.py output:     - \"Staketengel\u00e4nder\"\nINFO - openai_analyzer.py output:     - \"Plattengel\u00e4nder\"\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: Raum\nINFO - openai_analyzer.py output:   Internal Name: Raum\nINFO - openai_analyzer.py output:   Type: Choice\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output:   Valid choices (use EXACTLY these values):\nINFO - openai_analyzer.py output:     - \"K\u00fcche\"\nINFO - openai_analyzer.py output:     - \"WC / Bad\"\nINFO - openai_analyzer.py output:     - \"Zimmer\"\nINFO - openai_analyzer.py output:     - \"Essen / Wohnen\"\nINFO - openai_analyzer.py output:     - \"Treppenhaus\"\nINFO - openai_analyzer.py output:   Description: \u0412 \u044d\u0442\u043e\u043c \u043f\u043e\u043b\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u043e\u043c\u043d\u0430\u0442\u0430\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: Marketing\nINFO - openai_analyzer.py output:   Internal Name: Marketing\nINFO - openai_analyzer.py output:   Type: Choice\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output:   Valid choices (use EXACTLY these values):\nINFO - openai_analyzer.py output:     - \"Montage\"\nINFO - openai_analyzer.py output:     - \"Mitarbeiter am Arbeiten\"\nINFO - openai_analyzer.py output:     - \"Betrieb\"\nINFO - openai_analyzer.py output:     - \"Infrastruktur & Logistik\"\nINFO - openai_analyzer.py output:     - \"Referenzbild\"\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: G\u00fcllelager\nINFO - openai_analyzer.py output:   Internal Name: G_x00fc_llelager\nINFO - openai_analyzer.py output:   Type: MultiChoice\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output:   Valid choices (use EXACTLY these values):\nINFO - openai_analyzer.py output:     - \"Tragblech\"\nINFO - openai_analyzer.py output:     - \"Sandwich\"\nINFO - openai_analyzer.py output:     - \"Spezialprojekte\"\nINFO - openai_analyzer.py output:     - \"Email\"\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: Status\nINFO - openai_analyzer.py output:   Internal Name: Status\nINFO - openai_analyzer.py output:   Type: Choice\nINFO - openai_analyzer.py output:   Required: Required\nINFO - openai_analyzer.py output:   Valid choices (use EXACTLY these values):\nINFO - openai_analyzer.py output:     - \"Entwurf KI\"\nINFO - openai_analyzer.py output:     - \"Bearbeitet Marketing\"\nINFO - openai_analyzer.py output:     - \"Bearbeitet Verkauf\"\nINFO - openai_analyzer.py output:     - \"Fertig\"\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: KI tags\nINFO - openai_analyzer.py output:   Internal Name: KItags\nINFO - openai_analyzer.py output:   Type: Note\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output:   Description: \u0417\u0434\u0435\u0441\u044c \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0442\u0435\u0433\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u044b \u0418\u0418, \u043d\u043e \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0441\u0445\u0435\u043c\u0435\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: Extracted Text\nINFO - openai_analyzer.py output:   Internal Name: MediaServiceOCR\nINFO - openai_analyzer.py output:   Type: Note\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Field: OriginalName\nINFO - openai_analyzer.py output:   Internal Name: OriginalName\nINFO - openai_analyzer.py output:   Type: Text\nINFO - openai_analyzer.py output:   Required: Optional\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: \"Stellen Sie sicher, dass der resultierende JSON-Code STRENG dem oben aufgef\u00fchrten Schema entspricht und nur die oben aufgef\u00fchrten Felder mit Schl\u00fcsseln enth\u00e4lt, die ihren title entsprechen.\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: \"Beispiel f\u00fcr das erwartete JSON-Format (Schl\u00fcssel - title):\nINFO - openai_analyzer.py output: ------------------------\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Found 5 photos in directories\nINFO - openai_analyzer.py output: Processing batch 1 of 1 (5 photos)...\nINFO - openai_analyzer.py output: INFO - File registry initialized with 5 processed and 0 uploaded files\nINFO - openai_analyzer.py output: INFO - Found 5 photos, 0 already analyzed, 5 to process\nINFO - openai_analyzer.py output: INFO - Analyzing photo: _DSC6713.jpg (Attempt 1/3)\nINFO - openai_analyzer.py output: INFO - Analyzing photo: 20230823_153639.jpeg (Attempt 1/3)\nINFO - openai_analyzer.py output: INFO - Analyzing photo: download.jpg (Attempt 1/3)\nINFO - openai_analyzer.py output: INFO - Analyzing photo: Breitenstein_Bettwil-30.jpg (Attempt 1/3)\nINFO - openai_analyzer.py output: INFO - Analyzing photo: IMG_0489.JPG (Attempt 1/3)\nINFO - openai_analyzer.py output: INFO - Using prompt with EXIF data for download.jpg\nINFO - openai_analyzer.py output: INFO - Using prompt with EXIF data for 20230823_153639.jpeg\nINFO - openai_analyzer.py output: INFO - Using prompt with EXIF data for Breitenstein_Bettwil-30.jpg\nINFO - openai_analyzer.py output: INFO - Using prompt with EXIF data for _DSC6713.jpg\nINFO - openai_analyzer.py output: INFO - Using prompt with EXIF data for IMG_0489.JPG\nINFO - openai_analyzer.py output: INFO - Successfully analyzed photo: 20230823_153639.jpeg\nINFO - openai_analyzer.py output: INFO - Analysis saved to: /app/data/analysis/20230823_153639_analysis.json\nINFO - openai_analyzer.py output: INFO - Completed OpenAI analysis for: 20230823_153639.jpeg\nINFO - openai_analyzer.py output: INFO - Successfully analyzed photo: _DSC6713.jpg\nINFO - openai_analyzer.py output: INFO - Analysis saved to: /app/data/analysis/_DSC6713_analysis.json\nINFO - openai_analyzer.py output: INFO - Completed OpenAI analysis for: _DSC6713.jpg\nINFO - openai_analyzer.py output: INFO - Successfully analyzed photo: download.jpg\nINFO - openai_analyzer.py output: INFO - Analysis saved to: /app/data/analysis/download_analysis.json\nINFO - openai_analyzer.py output: INFO - Completed OpenAI analysis for: download.jpg\nINFO - openai_analyzer.py output: INFO - Successfully analyzed photo: Breitenstein_Bettwil-30.jpg\nINFO - openai_analyzer.py output: INFO - Analysis saved to: /app/data/analysis/Breitenstein_Bettwil-30_analysis.json\nINFO - openai_analyzer.py output: INFO - Completed OpenAI analysis for: Breitenstein_Bettwil-30.jpg\nINFO - openai_analyzer.py output: INFO - Successfully analyzed photo: IMG_0489.JPG\nINFO - openai_analyzer.py output: INFO - Analysis saved to: /app/data/analysis/IMG_0489_analysis.json\nINFO - openai_analyzer.py output: INFO - Completed OpenAI analysis for: IMG_0489.JPG\nINFO - openai_analyzer.py output: INFO - Total photos: 5 (processed: 5, skipped: 0)\nINFO - openai_analyzer.py output: Completed batch 1 (5 photos processed)\nINFO - openai_analyzer.py output: INFO - Successfully processed 5 photos with OpenAI API\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Successfully processed 5 photos with OpenAI API\nINFO - openai_analyzer.py output: INFO - Analysis results saved to: /app/data/analysis\nINFO - openai_analyzer.py output: Analysis results saved to: /app/data/analysis\nINFO - openai_analyzer.py output: INFO - Sample analysis for first photo: {'Titel': 'Detailaufnahme eines Holzhauses', 'Kunde': None, 'Ort': None, 'Projektkategorie': 'Wohnbaute', 'Material': ['Holz'], 'Holzart': None, 'Beschreibung': 'Das Bild zeigt die Au\u00dfenfassade eines Holzhauses mit vertikaler Holzverkleidung. Ein kleines Fenster ist zu sehen, das von der Verkleidung umgeben ist. Der Bereich um das Haus ist begr\u00fcnt und es sind andere Geb\u00e4ude im Hintergrund sichtbar.', 'Treppe': None, 'Ansicht': 'Aussenaufnahme', 'Sparte / Kategorie': ['Holzbau'], 'B\u00f6den & Decken': None, 'Fassade': ['Holzfassade vertikal'], 'Bauteil': ['Fenster', 'Fassade'], 'Ausf\u00fchrung': None, 'Farbbehandlung': 'unbehandelt', 'Gel\u00e4nder': None, 'Raum': None, 'Marketing': 'Referenzbild', 'G\u00fcllelager': None, 'Status': 'Entwurf KI', 'KI tags': 'Holzverkleidung, Garten, l\u00e4ndliche Umgebung', 'Extracted Text': None, 'OriginalName': None}\nINFO - openai_analyzer.py output: \nINFO - openai_analyzer.py output: Sample analysis for first photo:\nINFO - openai_analyzer.py output: {\nINFO - openai_analyzer.py output:   \"Titel\": \"Detailaufnahme eines Holzhauses\",\nINFO - openai_analyzer.py output:   \"Kunde\": null,\nINFO - openai_analyzer.py output:   \"Ort\": null,\nINFO - openai_analyzer.py output:   \"Projektkategorie\": \"Wohnbaute\",\nINFO - openai_analyzer.py output:   \"Material\": [\nINFO - openai_analyzer.py output:     \"Holz\"\nINFO - openai_analyzer.py output:   ],\nINFO - openai_analyzer.py output:   \"Holzart\": null,\nINFO - openai_analyzer.py output:   \"Beschreibung\": \"Das Bild zeigt die Au\u00dfenfassade eines Holzhauses mit vertikaler Holzverkleidung. Ein kleines Fenster ist zu sehen, das von der Verkleidung umgeben ist. Der Bereich um das Haus ist begr\u00fcnt und es sind andere Geb\u00e4ude im Hintergrund sichtbar.\",\nINFO - openai_analyzer.py output:   \"Treppe\": null,\nINFO - openai_analyzer.py output:   \"Ansicht\": \"Aussenaufnahme\",\nINFO - openai_analyzer.py output:   \"Sparte / Kategorie\": [\nINFO - openai_analyzer.py output:     \"Holzbau\"\nINFO - openai_analyzer.py output:   ],\nINFO - openai_analyzer.py output:   \"B\u00f6den & Decken\": null,\nINFO - openai_analyzer.py output:   \"Fassade\": [\nINFO - openai_analyzer.py output:     \"Holzfassade vertikal\"\nINFO - openai_analyzer.py output:   ],\nINFO - openai_analyzer.py output:   \"Bauteil\": [\nINFO - openai_analyzer.py output:     \"Fenster\",\nINFO - openai_analyzer.py output:     \"Fassade\"\nINFO - openai_analyzer.py output:   ],\nINFO - openai_analyzer.py output:   \"Ausf\u00fchrung\": null,\nINFO - openai_analyzer.py output:   \"Farbbehandlung\": \"unbehandelt\",\nINFO - openai_analyzer.py output:   \"Gel\u00e4nder\": null,\nINFO - openai_analyzer.py output:   \"Raum\": null,\nINFO - openai_analyzer.py output:   \"Marketing\": \"Referenzbild\",\nINFO - openai_analyzer.py output:   \"G\u00fcllelager\": null,\nINFO - openai_analyzer.py output:   \"Status\": \"Entwurf KI\",\nINFO - openai_analyzer.py output:   \"KI tags\": \"Holzverkleidung, Garten, l\u00e4ndliche Umgebung\",\nINFO - openai_analyzer.py output:   \"Extracted Text\": null,\nINFO - openai_analyzer.py output:   \"OriginalName\": null\nINFO - openai_analyzer.py output: }\nINFO - Successfully completed openai_analyzer.py in 21.11 seconds\nINFO - Running metadata_generator.py...\nINFO - metadata_generator.py output: INFO - Loaded metadata schema from config/sharepoint_choices.json\nINFO - metadata_generator.py output: INFO - File registry initialized with 5 processed and 0 uploaded files\nINFO - metadata_generator.py output: INFO - Found 5 processed photos\nINFO - metadata_generator.py output: \nINFO - metadata_generator.py output: Found 5 processed photos\nINFO - metadata_generator.py output: INFO - Next file number: 1\nINFO - metadata_generator.py output: INFO - Generated target filename: Erni_Referenzfoto_0001.jpeg\nINFO - metadata_generator.py output: INFO - Generated metadata for Erni_Referenzfoto_0001.jpeg with intelligent data integration\nINFO - metadata_generator.py output: INFO - Saved metadata for upload: /app/data/upload/metadata/Erni_Referenzfoto_0001.json\nINFO - metadata_generator.py output: INFO - Copied original metadata to upload directory: /app/data/upload/metadata/Erni_Referenzfoto_0001.yml\nINFO - metadata_generator.py output: INFO - Copied photo to upload directory: /app/data/upload/Erni_Referenzfoto_0001.jpeg\nINFO - metadata_generator.py output: INFO - Generated target filename: Erni_Referenzfoto_0002.jpg\nINFO - metadata_generator.py output: INFO - Generated metadata for Erni_Referenzfoto_0002.jpg with intelligent data integration\nINFO - metadata_generator.py output: INFO - Saved metadata for upload: /app/data/upload/metadata/Erni_Referenzfoto_0002.json\nINFO - metadata_generator.py output: INFO - Copied original metadata to upload directory: /app/data/upload/metadata/Erni_Referenzfoto_0002.yml\nINFO - metadata_generator.py output: INFO - Copied photo to upload directory: /app/data/upload/Erni_Referenzfoto_0002.jpg\nINFO - metadata_generator.py output: INFO - Generated target filename: Erni_Referenzfoto_0003.jpg\nINFO - metadata_generator.py output: INFO - Generated metadata for Erni_Referenzfoto_0003.jpg with intelligent data integration\nINFO - metadata_generator.py output: INFO - Saved metadata for upload: /app/data/upload/metadata/Erni_Referenzfoto_0003.json\nINFO - metadata_generator.py output: INFO - Copied original metadata to upload directory: /app/data/upload/metadata/Erni_Referenzfoto_0003.yml\nINFO - metadata_generator.py output: INFO - Copied photo to upload directory: /app/data/upload/Erni_Referenzfoto_0003.jpg\nINFO - metadata_generator.py output: INFO - Generated target filename: Erni_Referenzfoto_0004.jpg\nINFO - metadata_generator.py output: INFO - Generated metadata for Erni_Referenzfoto_0004.jpg with intelligent data integration\nINFO - metadata_generator.py output: INFO - Saved metadata for upload: /app/data/upload/metadata/Erni_Referenzfoto_0004.json\nINFO - metadata_generator.py output: INFO - Copied original metadata to upload directory: /app/data/upload/metadata/Erni_Referenzfoto_0004.yml\nINFO - metadata_generator.py output: INFO - Copied photo to upload directory: /app/data/upload/Erni_Referenzfoto_0004.jpg\nINFO - metadata_generator.py output: INFO - Generated target filename: Erni_Referenzfoto_0005.jpg\nINFO - metadata_generator.py output: INFO - Generated metadata for Erni_Referenzfoto_0005.jpg with intelligent data integration\nINFO - metadata_generator.py output: INFO - Saved metadata for upload: /app/data/upload/metadata/Erni_Referenzfoto_0005.json\nINFO - metadata_generator.py output: INFO - Copied original metadata to upload directory: /app/data/upload/metadata/Erni_Referenzfoto_0005.yml\nINFO - metadata_generator.py output: INFO - Copied photo to upload directory: /app/data/upload/Erni_Referenzfoto_0005.jpg\nINFO - metadata_generator.py output: INFO - Prepared 5 photos for upload\nINFO - metadata_generator.py output: \nINFO - metadata_generator.py output: Prepared 5 photos for upload:\nINFO - metadata_generator.py output: INFO - Prepared 20230823_153639.jpeg -> Erni_Referenzfoto_0001.jpeg\nINFO - metadata_generator.py output: - 20230823_153639.jpeg -> Erni_Referenzfoto_0001.jpeg\nINFO - metadata_generator.py output: INFO - Prepared IMG_0489.jpg -> Erni_Referenzfoto_0002.jpg\nINFO - metadata_generator.py output: - IMG_0489.jpg -> Erni_Referenzfoto_0002.jpg\nINFO - metadata_generator.py output: INFO - Prepared download.jpg -> Erni_Referenzfoto_0003.jpg\nINFO - metadata_generator.py output: - download.jpg -> Erni_Referenzfoto_0003.jpg\nINFO - metadata_generator.py output: INFO - Prepared Breitenstein_Bettwil-30.jpg -> Erni_Referenzfoto_0004.jpg\nINFO - metadata_generator.py output: - Breitenstein_Bettwil-30.jpg -> Erni_Referenzfoto_0004.jpg\nINFO - metadata_generator.py output: INFO - Prepared _DSC6713.jpg -> Erni_Referenzfoto_0005.jpg\nINFO - metadata_generator.py output: - _DSC6713.jpg -> Erni_Referenzfoto_0005.jpg\nINFO - metadata_generator.py output: INFO - Photos and metadata saved to: /app/data/upload and /app/data/upload/metadata\nINFO - metadata_generator.py output: \nINFO - metadata_generator.py output: Photos and metadata saved to:\nINFO - metadata_generator.py output: - Photos: /app/data/upload\nINFO - metadata_generator.py output: - Metadata: /app/data/upload/metadata\nINFO - Successfully completed metadata_generator.py in 0.46 seconds\nINFO - Running sharepoint_uploader.py...\nINFO - sharepoint_uploader.py output: INFO - File registry initialized with 5 processed and 0 uploaded files\nINFO - sharepoint_uploader.py output: INFO - Found 5 files ready for upload\nINFO - sharepoint_uploader.py output: INFO - Found 5 files ready for upload\nINFO - sharepoint_uploader.py output: \nINFO - sharepoint_uploader.py output: Found 5 files ready for upload\nINFO - sharepoint_uploader.py output: INFO - Authenticating to SharePoint site: https://erni.sharepoint.com/sites/100_Testing_KI-Projekte\nINFO - sharepoint_uploader.py output: INFO - Retrieving library: Fertige Referenzfotos\nINFO - sharepoint_uploader.py output: INFO - Found library: Fertige Referenzfotos\nINFO - sharepoint_uploader.py output: INFO - Processing batch 1 (5 files)\nINFO - sharepoint_uploader.py output: INFO - Uploading file: Erni_Referenzfoto_0001.jpeg\nINFO - sharepoint_uploader.py output: INFO - File uploaded: Erni_Referenzfoto_0001.jpeg\nINFO - sharepoint_uploader.py output: INFO - Metadata updated for: Erni_Referenzfoto_0001.jpeg\nINFO - sharepoint_uploader.py output: INFO - File moved to uploaded directory: /app/data/uploaded/Erni_Referenzfoto_0001.jpeg\nINFO - sharepoint_uploader.py output: INFO - JSON metadata file uploaded: Erni_Referenzfoto_0001.json\nINFO - sharepoint_uploader.py output: INFO - JSON metadata file moved to uploaded directory: /app/data/uploaded/Erni_Referenzfoto_0001.json\nINFO - sharepoint_uploader.py output: INFO - Original metadata file uploaded: Erni_Referenzfoto_0001.yml\nINFO - sharepoint_uploader.py output: INFO - Original metadata file moved to uploaded directory: /app/data/uploaded/Erni_Referenzfoto_0001.yml\nINFO - sharepoint_uploader.py output: INFO - Registry updated for Erni_Referenzfoto_0001.jpeg and 20230823_153639.jpeg\nINFO - sharepoint_uploader.py output: INFO - Uploading file: Erni_Referenzfoto_0003.jpg\nINFO - sharepoint_uploader.py output: INFO - File uploaded: Erni_Referenzfoto_0003.jpg\nINFO - sharepoint_uploader.py output: INFO - Metadata updated for: Erni_Referenzfoto_0003.jpg\nINFO - sharepoint_uploader.py output: INFO - File moved to uploaded directory: /app/data/uploaded/Erni_Referenzfoto_0003.jpg\nINFO - sharepoint_uploader.py output: INFO - JSON metadata file uploaded: Erni_Referenzfoto_0003.json\nINFO - sharepoint_uploader.py output: INFO - JSON metadata file moved to uploaded directory: /app/data/uploaded/Erni_Referenzfoto_0003.json\nINFO - sharepoint_uploader.py output: INFO - Original metadata file uploaded: Erni_Referenzfoto_0003.yml\nINFO - sharepoint_uploader.py output: INFO - Original metadata file moved to uploaded directory: /app/data/uploaded/Erni_Referenzfoto_0003.yml\nINFO - sharepoint_uploader.py output: INFO - Registry updated for Erni_Referenzfoto_0003.jpg and download.jpg\nINFO - sharepoint_uploader.py output: INFO - Uploading file: Erni_Referenzfoto_0002.jpg\nINFO - sharepoint_uploader.py output: INFO - File uploaded: Erni_Referenzfoto_0002.jpg\nINFO - sharepoint_uploader.py output: INFO - Metadata updated for: Erni_Referenzfoto_0002.jpg\nINFO - sharepoint_uploader.py output: INFO - File moved to uploaded directory: /app/data/uploaded/Erni_Referenzfoto_0002.jpg\nINFO - sharepoint_uploader.py output: INFO - JSON metadata file uploaded: Erni_Referenzfoto_0002.json\nINFO - sharepoint_uploader.py output: INFO - JSON metadata file moved to uploaded directory: /app/data/uploaded/Erni_Referenzfoto_0002.json\nINFO - sharepoint_uploader.py output: INFO - Original metadata file uploaded: Erni_Referenzfoto_0002.yml\nINFO - sharepoint_uploader.py output: INFO - Original metadata file moved to uploaded directory: /app/data/uploaded/Erni_Referenzfoto_0002.yml\nINFO - sharepoint_uploader.py output: INFO - Registry updated for Erni_Referenzfoto_0002.jpg and IMG_0489.jpg\nINFO - sharepoint_uploader.py output: INFO - Uploading file: Erni_Referenzfoto_0005.jpg\nINFO - sharepoint_uploader.py output: INFO - File uploaded: Erni_Referenzfoto_0005.jpg\nINFO - sharepoint_uploader.py output: INFO - Metadata updated for: Erni_Referenzfoto_0005.jpg\nINFO - sharepoint_uploader.py output: INFO - File moved to uploaded directory: /app/data/uploaded/Erni_Referenzfoto_0005.jpg\nINFO - sharepoint_uploader.py output: INFO - JSON metadata file uploaded: Erni_Referenzfoto_0005.json\nINFO - sharepoint_uploader.py output: INFO - JSON metadata file moved to uploaded directory: /app/data/uploaded/Erni_Referenzfoto_0005.json\nINFO - sharepoint_uploader.py output: INFO - Original metadata file uploaded: Erni_Referenzfoto_0005.yml\nINFO - sharepoint_uploader.py output: INFO - Original metadata file moved to uploaded directory: /app/data/uploaded/Erni_Referenzfoto_0005.yml\nINFO - sharepoint_uploader.py output: INFO - Registry updated for Erni_Referenzfoto_0005.jpg and _DSC6713.jpg\nINFO - sharepoint_uploader.py output: INFO - Uploading file: Erni_Referenzfoto_0004.jpg\nINFO - sharepoint_uploader.py output: INFO - File uploaded: Erni_Referenzfoto_0004.jpg\nINFO - sharepoint_uploader.py output: INFO - Metadata updated for: Erni_Referenzfoto_0004.jpg\nINFO - sharepoint_uploader.py output: INFO - File moved to uploaded directory: /app/data/uploaded/Erni_Referenzfoto_0004.jpg\nINFO - sharepoint_uploader.py output: INFO - JSON metadata file uploaded: Erni_Referenzfoto_0004.json\nINFO - sharepoint_uploader.py output: INFO - JSON metadata file moved to uploaded directory: /app/data/uploaded/Erni_Referenzfoto_0004.json\nINFO - sharepoint_uploader.py output: INFO - Original metadata file uploaded: Erni_Referenzfoto_0004.yml\nINFO - sharepoint_uploader.py output: INFO - Original metadata file moved to uploaded directory: /app/data/uploaded/Erni_Referenzfoto_0004.yml\nINFO - sharepoint_uploader.py output: INFO - Registry updated for Erni_Referenzfoto_0004.jpg and Breitenstein_Bettwil-30.jpg\nINFO - sharepoint_uploader.py output: INFO - Upload results: 5 successful, 0 failed\nINFO - sharepoint_uploader.py output: \nINFO - sharepoint_uploader.py output: Upload results:\nINFO - sharepoint_uploader.py output: - Successfully uploaded: 5 files\nINFO - sharepoint_uploader.py output: - Failed to upload: 0 files\nINFO - sharepoint_uploader.py output: \nINFO - sharepoint_uploader.py output: Successfully uploaded files:\nINFO - sharepoint_uploader.py output: - Erni_Referenzfoto_0001.jpeg\nINFO - sharepoint_uploader.py output: - Erni_Referenzfoto_0003.jpg\nINFO - sharepoint_uploader.py output: - Erni_Referenzfoto_0002.jpg\nINFO - sharepoint_uploader.py output: - Erni_Referenzfoto_0005.jpg\nINFO - sharepoint_uploader.py output: - Erni_Referenzfoto_0004.jpg\nINFO - sharepoint_uploader.py output: \nINFO - sharepoint_uploader.py output: Uploaded files moved to: /app/data/uploaded\nINFO - sharepoint_uploader.py output: Metadata files moved from /app/data/upload/metadata to /app/data/uploaded\nINFO - Successfully completed sharepoint_uploader.py in 14.49 seconds\nINFO - Downloads directory is already empty\nINFO - All scripts completed successfully\n",
            "stderr": ""
        },
        "last_updated": 1744374606.0748584
    }
}